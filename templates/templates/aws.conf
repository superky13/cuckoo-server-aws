[aws]
# Specify the AWS Region (for example, us-west-1)
region_name = {{ aws_region_name }}

# Specify the Availability Zone(for example, us-west-1a) to create a new volume (used at machine's restoration).
availability_zone = {{ aws_availability_zone }}

# Access keys consist of two parts: an access key ID (for example, AKIAIOSFODNN7EXAMPLE)
# and a secret access key (for example, wJalrXUtnFEMI/K7MDENG/bPxRfiCYEXAMPLEKEY).
# To create access keys for your AWS account root user, you must use the AWS Management Console.
aws_access_key_id = {{ aws_access_key }}
aws_secret_access_key = {{ aws_secret_key }}

# Specify a comma-separated list of available machines to be used.
# Each machine will be represented by the instance-id (for example, i-05f07711c635f817f).
# For each specified instance-id you have to define a dedicated section containing the details
# on the respective machine. (E.g. i-05f07711c635f817f,i-04d465547cba1af5e)
# For better performance, it is recommended to leave this empty and set autoscale = yes.
machines = 

# Default network interface.
interface = {{ aws_interface }}

# To improve the performance, running_machines_gap is number of machines that are ready to perform a task (up and running).
# running_machines_gap is the size of a pool which contains machines that were already started in advance.
# Whenever a machine from the pool starts a task, the machinery will start another new machine.
# In a scenario where all the list of machines are occupied, and autoscale mode is on, the machinery will instantly
# scale up by creating new machines.
# Thus, there will always be a constant number of ready machines for the user's requests.
# It is recommended to set this value to 1 and above.
running_machines_gap = {{ aws_running_machines_gap }} 

# In a scenario where all the configured machines are occupied, the machinery will instantly scale up by creating
# new machines and adding them to the Cuckoo internal database (DB). The new machines will be terminated after use.
# The user can choose to prepare any number of machines, but does not have to (if autoscale in on).
[autoscale]

# Enable auto-scale in cuckoo(by setting autoscale = yes). recommended for better performance.
autoscale = {{ aws_autoscale }}

# Specify the maximum number of online machines that was created as a result of auto-scale operation.
# Once reaching that limit, cuckoo will create a new machine only if another was terminated.
# This limit prevents a situation of creating machine beyond the subnet capacity.
dynamic_machines_limit = {{ aws_dynamic_machines_limit }}

# Specify the Amazon Machine Image (AMI). It required to launch a new instance.
# You should create an image from the guest machine.
image_id = {{ aws_image_id }}

# Specify the machine's instance type(for example, t2.small)
instance_type = {{ aws_instance_type }}

# Specify the subnet id where the machines will be placed
subnet_id = {{ aws_subnet_id }} 

# Specify a comma-separated list of security groups IDs that will be associated with the machines.
# On the Cuckoo default settings ,the security groups must allow tcp ports 2042,8000 and 8090 on the inbound.
security_groups = {{ aws_security_groups }}

# Specify the operating system platform used by the new machine
# [windows/darwin/linux].
platform = {{ aws_platform }}

# Default network interface.
interface = 

# Mostly unused for now. Please don't fill it out.
options = 

# (Optional) Set your own tags. These are comma separated and help to identify
# specific VMs. You can run samples on VMs with tag you require.
tags = {{ aws_tags }} 

# Specify the IP of the Result Server, as your virtual machine sees it.
# It should be the nest ip address.
resultserver_ip = {{ cuckoo_resultserver_ip }}

# Specify a port number to bind the result server on.
resultserver_port = {{ aws_resultserver_port }}
